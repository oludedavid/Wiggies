{"ast":null,"code":"var _jsxFileName = \"/Users/davidolude/Documents/Fullstack-program/marketplace/frontend/src/pages/products/ProductCard.jsx\",\n  _s = $RefreshSig$();\nimport { v4 as uuidv4 } from \"uuid\";\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProductCard() {\n  _s();\n  const numberOfStars = 3;\n  const [ratings, setRatingsArray] = useState([]);\n  function setNumberOfStars(numberOfStars) {\n    // initialize an empty array to hold our rating values\n    let newRatings = [];\n\n    // push the appropriate rating values into newRatings based on the number of stars\n    for (let i = 0; i < numberOfStars && i < 5; i++) {\n      newRatings.push(\"filled-star\");\n    }\n\n    // if newRatings is less than 5 elements long, push empty-star values to fill the remaining slots\n    for (let i = newRatings.length; i < 5; i++) {\n      newRatings.push(\"empty-star\");\n    }\n\n    // set the ratings state to the new array of rating values\n    setRatingsArray(newRatings);\n  }\n  useEffect(() => {\n    setNumberOfStars(numberOfStars);\n  }, []);\n  console.log(ratings);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pro\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rating-container\",\n      children: ratings.map(rating => {\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"rating\",\n          src: `./images/ratings/${rating === \"empty-star\" ? \"emptyStar.png\" : \"start.png\"}`\n        }, uuidv4(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(ProductCard, \"PahAXPpiAt/jLUTTQPppYwU3JbI=\");\n_c = ProductCard;\nvar _c;\n$RefreshReg$(_c, \"ProductCard\");","map":{"version":3,"names":["v4","uuidv4","React","useState","useEffect","jsxDEV","_jsxDEV","ProductCard","_s","numberOfStars","ratings","setRatingsArray","setNumberOfStars","newRatings","i","push","length","console","log","className","children","map","rating","src","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/davidolude/Documents/Fullstack-program/marketplace/frontend/src/pages/products/ProductCard.jsx"],"sourcesContent":["import { v4 as uuidv4 } from \"uuid\";\nimport React, { useState, useEffect } from \"react\";\n\nexport default function ProductCard() {\n  const numberOfStars = 3;\n  const [ratings, setRatingsArray] = useState([]);\n\n  function setNumberOfStars(numberOfStars) {\n    // initialize an empty array to hold our rating values\n    let newRatings = [];\n\n    // push the appropriate rating values into newRatings based on the number of stars\n    for (let i = 0; i < numberOfStars && i < 5; i++) {\n      newRatings.push(\"filled-star\");\n    }\n\n    // if newRatings is less than 5 elements long, push empty-star values to fill the remaining slots\n    for (let i = newRatings.length; i < 5; i++) {\n      newRatings.push(\"empty-star\");\n    }\n\n    // set the ratings state to the new array of rating values\n    setRatingsArray(newRatings);\n  }\n\n  useEffect(() => {\n    setNumberOfStars(numberOfStars);\n  }, []);\n\n  console.log(ratings);\n\n  return (\n    <div className=\"pro\">\n      <div className=\"rating-container\">\n        {ratings.map((rating) => {\n          return (\n            <img\n              className=\"rating\"\n              key={uuidv4()}\n              src={`./images/ratings/${\n                rating === \"empty-star\" ? \"emptyStar.png\" : \"start.png\"\n              }`}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,SAASA,EAAE,IAAIC,MAAM,QAAQ,MAAM;AACnC,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,eAAe,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACpC,MAAMC,aAAa,GAAG,CAAC;EACvB,MAAM,CAACC,OAAO,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE/C,SAASS,gBAAgBA,CAACH,aAAa,EAAE;IACvC;IACA,IAAII,UAAU,GAAG,EAAE;;IAEnB;IACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,aAAa,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC/CD,UAAU,CAACE,IAAI,CAAC,aAAa,CAAC;IAChC;;IAEA;IACA,KAAK,IAAID,CAAC,GAAGD,UAAU,CAACG,MAAM,EAAEF,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC1CD,UAAU,CAACE,IAAI,CAAC,YAAY,CAAC;IAC/B;;IAEA;IACAJ,eAAe,CAACE,UAAU,CAAC;EAC7B;EAEAT,SAAS,CAAC,MAAM;IACdQ,gBAAgB,CAACH,aAAa,CAAC;EACjC,CAAC,EAAE,EAAE,CAAC;EAENQ,OAAO,CAACC,GAAG,CAACR,OAAO,CAAC;EAEpB,oBACEJ,OAAA;IAAKa,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBd,OAAA;MAAKa,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAC9BV,OAAO,CAACW,GAAG,CAAEC,MAAM,IAAK;QACvB,oBACEhB,OAAA;UACEa,SAAS,EAAC,QAAQ;UAElBI,GAAG,EAAG,oBACJD,MAAM,KAAK,YAAY,GAAG,eAAe,GAAG,WAC7C;QAAE,GAHErB,MAAM,CAAC,CAAC;UAAAuB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAId,CAAC;MAEN,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACnB,EAAA,CA7CuBD,WAAW;AAAAqB,EAAA,GAAXrB,WAAW;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}