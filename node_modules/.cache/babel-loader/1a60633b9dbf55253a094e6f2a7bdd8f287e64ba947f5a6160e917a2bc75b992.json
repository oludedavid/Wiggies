{"ast":null,"code":"var _jsxFileName = \"/Users/davidolude/Documents/Fullstack-program/marketplace/frontend/src/pages/ProductRatings.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProductRatings(props) {\n  _s();\n  const rating = props.rating;\n  const [ratings, setRatingsArray] = useState([]);\n\n  //   Create a function that takes in a number and returns an array of rating values\n  function setNumberOfStars(num_of_stars) {\n    // initialize an empty array to hold our rating values\n    let newRatings = [];\n\n    //1. push the appropriate rating values into newRatings based on the number of stars\n    for (let i = 0; i < Math.floor(num_of_stars) && i < 5; i++) {\n      newRatings.push(\"filled-star\");\n    }\n\n    // 2. check if there is a decimal value and add \"half-star\" icon\n    if (num_of_stars % 1 !== 0 && newRatings.length < 5) {\n      newRatings.push(\"half-star\");\n    }\n\n    // 3. if newRatings is less than 5 elements long, push empty-star values to fill the remaining slots\n    for (let i = newRatings.length; i < 5; i++) {\n      newRatings.push(\"empty-star\");\n    }\n\n    // 4.set the ratings state to the new array of rating values\n    setRatingsArray(newRatings);\n  }\n\n  // 5. Call the setNumberOfStars function in useEffect\n  useEffect(() => {\n    setNumberOfStars(rating);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pro\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rating-container\",\n      children: ratings.map(rating => {\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"rating\",\n          src: `./images/ratings/${rating === \"empty-star\" ? \"emptyStar.png\" : rating === \"half-star\" ? \"halfStar.png\" : \"star.png\"}`,\n          alt: rating\n        }, uuidv4(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(ProductRatings, \"PahAXPpiAt/jLUTTQPppYwU3JbI=\");\n_c = ProductRatings;\nvar _c;\n$RefreshReg$(_c, \"ProductRatings\");","map":{"version":3,"names":["React","useState","useEffect","v4","uuidv4","jsxDEV","_jsxDEV","ProductRatings","props","_s","rating","ratings","setRatingsArray","setNumberOfStars","num_of_stars","newRatings","i","Math","floor","push","length","className","children","map","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/davidolude/Documents/Fullstack-program/marketplace/frontend/src/pages/ProductRatings.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport default function ProductRatings(props) {\n  const rating = props.rating;\n  const [ratings, setRatingsArray] = useState([]);\n\n  //   Create a function that takes in a number and returns an array of rating values\n  function setNumberOfStars(num_of_stars) {\n    // initialize an empty array to hold our rating values\n    let newRatings = [];\n\n    //1. push the appropriate rating values into newRatings based on the number of stars\n    for (let i = 0; i < Math.floor(num_of_stars) && i < 5; i++) {\n      newRatings.push(\"filled-star\");\n    }\n\n    // 2. check if there is a decimal value and add \"half-star\" icon\n    if (num_of_stars % 1 !== 0 && newRatings.length < 5) {\n      newRatings.push(\"half-star\");\n    }\n\n    // 3. if newRatings is less than 5 elements long, push empty-star values to fill the remaining slots\n    for (let i = newRatings.length; i < 5; i++) {\n      newRatings.push(\"empty-star\");\n    }\n\n    // 4.set the ratings state to the new array of rating values\n    setRatingsArray(newRatings);\n  }\n\n  // 5. Call the setNumberOfStars function in useEffect\n  useEffect(() => {\n    setNumberOfStars(rating);\n  }, []);\n\n  return (\n    <div className=\"pro\">\n      <div className=\"rating-container\">\n        {/* 6. Render the stars in jsx */}\n        {ratings.map((rating) => {\n          return (\n            <img\n              className=\"rating\"\n              key={uuidv4()}\n              src={`./images/ratings/${\n                rating === \"empty-star\"\n                  ? \"emptyStar.png\"\n                  : rating === \"half-star\"\n                  ? \"halfStar.png\"\n                  : \"star.png\"\n              }`}\n              alt={rating}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,EAAE,IAAIC,MAAM,QAAQ,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,eAAe,SAASC,cAAcA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC5C,MAAMC,MAAM,GAAGF,KAAK,CAACE,MAAM;EAC3B,MAAM,CAACC,OAAO,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;;EAE/C;EACA,SAASY,gBAAgBA,CAACC,YAAY,EAAE;IACtC;IACA,IAAIC,UAAU,GAAG,EAAE;;IAEnB;IACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACJ,YAAY,CAAC,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC1DD,UAAU,CAACI,IAAI,CAAC,aAAa,CAAC;IAChC;;IAEA;IACA,IAAIL,YAAY,GAAG,CAAC,KAAK,CAAC,IAAIC,UAAU,CAACK,MAAM,GAAG,CAAC,EAAE;MACnDL,UAAU,CAACI,IAAI,CAAC,WAAW,CAAC;IAC9B;;IAEA;IACA,KAAK,IAAIH,CAAC,GAAGD,UAAU,CAACK,MAAM,EAAEJ,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC1CD,UAAU,CAACI,IAAI,CAAC,YAAY,CAAC;IAC/B;;IAEA;IACAP,eAAe,CAACG,UAAU,CAAC;EAC7B;;EAEA;EACAb,SAAS,CAAC,MAAM;IACdW,gBAAgB,CAACH,MAAM,CAAC;EAC1B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEJ,OAAA;IAAKe,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBhB,OAAA;MAAKe,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAE9BX,OAAO,CAACY,GAAG,CAAEb,MAAM,IAAK;QACvB,oBACEJ,OAAA;UACEe,SAAS,EAAC,QAAQ;UAElBG,GAAG,EAAG,oBACJd,MAAM,KAAK,YAAY,GACnB,eAAe,GACfA,MAAM,KAAK,WAAW,GACtB,cAAc,GACd,UACL,EAAE;UACHe,GAAG,EAAEf;QAAO,GARPN,MAAM,CAAC,CAAC;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OASd,CAAC;MAEN,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACpB,EAAA,CAxDuBF,cAAc;AAAAuB,EAAA,GAAdvB,cAAc;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}